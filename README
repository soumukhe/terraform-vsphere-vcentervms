# File Name: main.tf:

# Terraform module start
module "vcentervms" {
  source  = "soumukhe/vcentervms/vsphere"
  version = "1.0.0"
  # insert the 2 required variables here
  vmnames          = ["db", "db1", "db2"]
  whoami           = var.whoami
  vcenter_password = var.vcenter_password
}
variable "whoami" {
  type = string
}

variable "vcenter_password" {}

output "VM_IPs" {
  value = module.vcentervms.ip
}

##  Terraform Module End


# Documentation on How to use this for DMZ Tiger Team Fabric

/*   How to Use This Terraform Script to spin up one or multple VMs in DMZ fabric

Kindly destroy VMs once done with what you are doing.  You can spin them up again in minutes
  When Creating VMs, your VM will spin up in a resource group on vCenter with your CCO ID name. your VM names will be appended by your CCO ID name.
  VMs will automatically get IPd and will connect to DHCP port group with full Internet access.

Once done installing whatever software you need on the VM, please use the Ubuntu 18.04 netplan utility to change IP and move over NIC from vCenter to your ACI port group
 documentation on how to use "netplan" is in the labdoc

STEP 1:   Copy script to file main.tf in your directory:
---------------------------------------------------------- 
Please make a file called "main.tf"  after logging int the jumpbox with your username in some director
  as an example:  "mkdir -p Terraform/vCenter && cd Terraform/vCenter"
  vi main.tf   and then copy this entire contents (the full README) in there

STEP 2:  Create Terraform Workspace:
------------------------------------
Once file is saved usage is very easy:
  Before you start usint this script, please do a "terraform init" and  make 2 workspaces in Terraform "Fab7"  and "Fab8"
   (a)  terraform init   
   (b) terraform workspace new Fab7  
   (c) terraform workspace new Fab8
   
STEP 3:  Spin up your VMs in either Fab7 or Fab8
--------------------------------------------------
   Now to build your VMs in Fab7, go to that workspace, similarly for Fab8  go to Fab8 worspace.   
    This is how to seee workspaces and switch between them.  
      "terraform worksapce list"   To list all your workspaces
      "terraform workspace select Fab7"    "terraform workspace select Fab8"   to go to the desired workspace

 *** Make sure to change the contents of the list "vmnames" in the above script), with the names you want for your VMs. You could do 1 to as many VMs there
  Please don't go crazy on the number of VMs you create.  Terraform by default does parallesim for 10 objects at a time
  To start using: 
    (a)  terraform validate    ( you can do terraform init again if you wish, but not needed, since you already did that before creating workspaces)
    (b)  terraform fmt
    (c)  terraform plan
    (d)  terraform apply
    (e)  terraform refresh (will show your IPs for the VMs),  subsequently you can do terraform output. 


The VMS will spin up now and once the script stops running (about 3 minutes),  do a "terraform refresh" and you will see the IPs it got.
  You can now ssh to them and they will have Internet Connectivity
  Install whatever you need to
  use netplan and then connect to ACI Fabric

STEP 4:  Destroy VMs when Done
--------------------------------
  when done  please use "terraform destroy" (make sure to select the correct workspace)  That will destroy the VMs.  If you are not going to use the VMs within the week, kindly destroy.
   command to use:  
     (a) terraform workspace select Fab7           or       terraform workspace select Fab8
     (b) terraform destroy
     
*/

